{"ast":null,"code":"var _jsxFileName = \"/Users/ouraniantrizi/Desktop/cardGame/src/components/TicTacToe.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './styles/TicTacToe.css'; // Optional: for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TicTacToe() {\n  _s();\n  const [board, setBoard] = useState(Array(9).fill(null)); // 3x3 grid, initially null\n  const [isXNext, setIsXNext] = useState(true); // Track which player's turn it is\n  const [winner, setWinner] = useState(null); // Track winner ('X' or 'O')\n\n  const handleClick = index => {\n    // Ignore click if the cell is already filled or if there's a winner\n    if (board[index] || winner) return;\n\n    // Copy the board and update the clicked cell\n    const newBoard = [...board];\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n\n    // Check for a winner after the move\n    checkWinner(newBoard);\n    setIsXNext(!isXNext); // Switch turns\n  };\n  const checkWinner = board => {\n    const winningCombinations = [[0, 1, 2], [3, 4, 5], [6, 7, 8],\n    // Rows\n    [0, 3, 6], [1, 4, 7], [2, 5, 8],\n    // Columns\n    [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n    for (let combo of winningCombinations) {\n      const [a, b, c] = combo;\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        setWinner(board[a]); // Set winner ('X' or 'O')\n        return;\n      }\n    }\n\n    // Check for a tie\n    if (board.every(cell => cell)) {\n      setWinner('Tie');\n    }\n  };\n  const handleReset = () => {\n    setBoard(Array(9).fill(null)); // Reset the board\n    setWinner(null); // Reset winner\n    setIsXNext(true); // Reset to X starting\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"tic-tac-toe\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      children: board.map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"cell\",\n        onClick: () => handleClick(index),\n        children: cell\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [winner ? winner === 'Tie' ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"The game is a tie!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [winner, \" wins!\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Next player: \", isXNext ? 'X' : 'O']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Restart Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(TicTacToe, \"3zqxtI9I+c+l40CGx1fvaCayYvg=\");\n_c = TicTacToe;\nexport default TicTacToe;\nvar _c;\n$RefreshReg$(_c, \"TicTacToe\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","TicTacToe","_s","board","setBoard","Array","fill","isXNext","setIsXNext","winner","setWinner","handleClick","index","newBoard","checkWinner","winningCombinations","combo","a","b","c","every","cell","handleReset","className","children","map","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ouraniantrizi/Desktop/cardGame/src/components/TicTacToe.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport './styles/TicTacToe.css'; // Optional: for styling\n\nfunction TicTacToe() {\n  const [board, setBoard] = useState(Array(9).fill(null)); // 3x3 grid, initially null\n  const [isXNext, setIsXNext] = useState(true); // Track which player's turn it is\n  const [winner, setWinner] = useState(null); // Track winner ('X' or 'O')\n\n  const handleClick = (index) => {\n    // Ignore click if the cell is already filled or if there's a winner\n    if (board[index] || winner) return;\n\n    // Copy the board and update the clicked cell\n    const newBoard = [...board];\n    newBoard[index] = isXNext ? 'X' : 'O';\n    setBoard(newBoard);\n\n    // Check for a winner after the move\n    checkWinner(newBoard);\n    setIsXNext(!isXNext); // Switch turns\n  };\n\n  const checkWinner = (board) => {\n    const winningCombinations = [\n      [0, 1, 2], [3, 4, 5], [6, 7, 8], // Rows\n      [0, 3, 6], [1, 4, 7], [2, 5, 8], // Columns\n      [0, 4, 8], [2, 4, 6] // Diagonals\n    ];\n\n    for (let combo of winningCombinations) {\n      const [a, b, c] = combo;\n      if (board[a] && board[a] === board[b] && board[a] === board[c]) {\n        setWinner(board[a]); // Set winner ('X' or 'O')\n        return;\n      }\n    }\n\n    // Check for a tie\n    if (board.every(cell => cell)) {\n      setWinner('Tie');\n    }\n  };\n\n  const handleReset = () => {\n    setBoard(Array(9).fill(null)); // Reset the board\n    setWinner(null); // Reset winner\n    setIsXNext(true); // Reset to X starting\n  };\n\n  return (\n    <div className=\"tic-tac-toe\">\n      <div className=\"board\">\n        {board.map((cell, index) => (\n          <div\n            key={index}\n            className=\"cell\"\n            onClick={() => handleClick(index)}\n          >\n            {cell}\n          </div>\n        ))}\n      </div>\n      <div className=\"game-info\">\n        {winner ? (\n          winner === 'Tie' ? (\n            <p>The game is a tie!</p>\n          ) : (\n            <p>{winner} wins!</p>\n          )\n        ) : (\n          <p>Next player: {isXNext ? 'X' : 'O'}</p>\n        )}\n        <button onClick={handleReset}>Restart Game</button>\n      </div>\n    </div>\n  );\n}\n\nexport default TicTacToe;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}