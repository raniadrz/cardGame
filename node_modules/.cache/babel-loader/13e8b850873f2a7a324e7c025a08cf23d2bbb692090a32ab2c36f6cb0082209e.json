{"ast":null,"code":"var _jsxFileName = \"/Users/ouraniantrizi/Desktop/memory-card-game/src/components/GameBoard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport './styles/GameBoard.css'; // Optional: for styling\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst generateShuffledCards = () => {\n  const cards = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n  const doubledCards = [...cards, ...cards]; // Duplicate the cards for matching pairs\n  return doubledCards.sort(() => Math.random() - 0.5); // Shuffle the cards\n};\nfunction GameBoard() {\n  _s();\n  const [cards, setCards] = useState(generateShuffledCards());\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n  useEffect(() => {\n    if (flippedIndices.length === 2) {\n      // Check if the two flipped cards match\n      const [first, second] = flippedIndices;\n      if (cards[first] === cards[second]) {\n        setMatchedCards(prev => [...prev, cards[first]]);\n      }\n      // Wait for a short delay before flipping the cards back\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }, [flippedIndices, cards]);\n  useEffect(() => {\n    // If all cards are matched, the game is over\n    if (matchedCards.length === cards.length / 2) {\n      setGameOver(true);\n    }\n  }, [matchedCards, cards]);\n  const handleCardClick = index => {\n    if (flippedIndices.length === 2 || flippedIndices.includes(index) || matchedCards.includes(cards[index])) {\n      return; // Ignore clicks if already flipped or matched\n    }\n    setFlippedIndices(prev => [...prev, index]);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-board\",\n    children: [cards.map((card, index) => /*#__PURE__*/_jsxDEV(Card, {\n      card: card,\n      onClick: () => handleCardClick(index),\n      isFlipped: flippedIndices.includes(index) || matchedCards.includes(card)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)), gameOver && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-over\",\n      children: \"You Win!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(GameBoard, \"D2J1hXIYI30Og/GdCNUHALvkAR0=\");\n_c = GameBoard;\nexport default GameBoard;\nvar _c;\n$RefreshReg$(_c, \"GameBoard\");","map":{"version":3,"names":["React","useState","useEffect","Card","jsxDEV","_jsxDEV","generateShuffledCards","cards","doubledCards","sort","Math","random","GameBoard","_s","setCards","flippedIndices","setFlippedIndices","matchedCards","setMatchedCards","gameOver","setGameOver","length","first","second","prev","setTimeout","handleCardClick","index","includes","className","children","map","card","onClick","isFlipped","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ouraniantrizi/Desktop/memory-card-game/src/components/GameBoard.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Card from './Card';\nimport './styles/GameBoard.css'; // Optional: for styling\n\nconst generateShuffledCards = () => {\n  const cards = ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H'];\n  const doubledCards = [...cards, ...cards]; // Duplicate the cards for matching pairs\n  return doubledCards.sort(() => Math.random() - 0.5); // Shuffle the cards\n};\n\nfunction GameBoard() {\n  const [cards, setCards] = useState(generateShuffledCards());\n  const [flippedIndices, setFlippedIndices] = useState([]);\n  const [matchedCards, setMatchedCards] = useState([]);\n  const [gameOver, setGameOver] = useState(false);\n\n  useEffect(() => {\n    if (flippedIndices.length === 2) {\n      // Check if the two flipped cards match\n      const [first, second] = flippedIndices;\n      if (cards[first] === cards[second]) {\n        setMatchedCards((prev) => [...prev, cards[first]]);\n      }\n      // Wait for a short delay before flipping the cards back\n      setTimeout(() => setFlippedIndices([]), 1000);\n    }\n  }, [flippedIndices, cards]);\n\n  useEffect(() => {\n    // If all cards are matched, the game is over\n    if (matchedCards.length === cards.length / 2) {\n      setGameOver(true);\n    }\n  }, [matchedCards, cards]);\n\n  const handleCardClick = (index) => {\n    if (flippedIndices.length === 2 || flippedIndices.includes(index) || matchedCards.includes(cards[index])) {\n      return; // Ignore clicks if already flipped or matched\n    }\n    setFlippedIndices((prev) => [...prev, index]);\n  };\n\n  return (\n    <div className=\"game-board\">\n      {cards.map((card, index) => (\n        <Card\n          key={index}\n          card={card}\n          onClick={() => handleCardClick(index)}\n          isFlipped={flippedIndices.includes(index) || matchedCards.includes(card)}\n        />\n      ))}\n      {gameOver && <div className=\"game-over\">You Win!</div>}\n    </div>\n  );\n}\n\nexport default GameBoard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}